    # 320*1*1*2048 same stride=1
    conv_16_1 = tf.nn.conv2d(input=concat_10,
                             filters=weights['conv_16_1'],
                             strides=[1, 1, 1, 1],
                             padding='SAME',
                             name='conv_16_1')

    relu_16_1 = tf.nn.relu(features=conv_16_1,
                           name='relu_16_1')

    # 384*1*1*2048 same stride=1
    conv_16_2_1 = tf.nn.conv2d(input=concat_10,
                               filters=weights['conv_16_2_1'],
                               strides=[1, 1, 1, 1],
                               padding='SAME',
                               name='conv_16_2_1')

    relu_16_2_1 = tf.nn.relu(features=conv_16_2_1,
                             name='relu_16_2_1')

    # 384*1*3*384 same stride=1
    conv_16_2_2_1 = tf.nn.conv2d(input=relu_16_2_1,
                                 filters=weights['conv_16_2_2_1'],
                                 strides=[1, 1, 1, 1],
                                 padding='SAME',
                                 name='conv_16_2_2_1')

    relu_16_2_2_1 = tf.nn.relu(features=conv_16_2_2_1,
                               name='relu_16_2_2_1')
    # 384*3*1*384 same stride=1
    conv_16_2_2_2 = tf.nn.conv2d(input=relu_16_2_1,
                                 filters=weights['conv_16_2_2_2'],
                                 strides=[1, 1, 1, 1],
                                 padding='SAME',
                                 name='conv_16_2_2_2')

    relu_16_2_2_2 = tf.nn.relu(features=conv_16_2_2_2,
                               name='relu_16_2_2_2')

    concat_16_2_3 = tf.concat(
        values=[relu_16_2_2_1, relu_16_2_2_2], axis=3, name='concat_16_2_3')

    # 448*1*1*2048 same stride=1
    conv_16_3_1 = tf.nn.conv2d(input=concat_10,
                               filters=weights['conv_16_3_1'],
                               strides=[1, 1, 1, 1],
                               padding='SAME',
                               name='conv_16_3_1')

    relu_16_3_1 = tf.nn.relu(features=conv_16_3_1,
                             name='relu_16_3_1')

    # 384*3*3*448 same stride=1
    conv_16_3_2 = tf.nn.conv2d(input=relu_16_3_1,
                               filters=weights['conv_16_3_2'],
                               strides=[1, 1, 1, 1],
                               padding='SAME',
                               name='conv_16_3_2')

    relu_16_3_2 = tf.nn.relu(features=conv_16_3_2,
                             name='relu_16_3_2')

    # 384*1*3*384 same stride=1
    conv_16_3_3_1 = tf.nn.conv2d(input=relu_16_3_2,
                                 filters=weights['conv_16_3_3_1'],
                                 strides=[1, 1, 1, 1],
                                 padding='SAME',
                                 name='conv_16_3_3_1')

    relu_16_3_3_1 = tf.nn.relu(features=conv_16_3_3_1,
                               name='relu_16_3_3_1')

    # 384*3*1*384 same stride=1
    conv_16_3_3_2 = tf.nn.conv2d(input=relu_16_3_2,
                                 filters=weights['conv_16_3_3_2'],
                                 strides=[1, 1, 1, 1],
                                 padding='SAME',
                                 name='conv_16_3_3_1')

    relu_16_3_3_2 = tf.nn.relu(features=conv_16_3_3_2,
                               name='relu_16_3_3_2')

    concat_16_3_4 = tf.concat(
        values=[relu_16_3_3_1, relu_16_3_3_2], axis=3, name='concat_16_3_4')

    # filter_size=3 same stride=1
    average_pool_16_4_1 = tf.nn.avg_pool2d(input=concat_10,
                                           filter=[1, 3, 3, 1],
                                           strides=[1, 1, 1, 1],
                                           padding='SAME',
                                           name='average_pool_16_4_1')

    # 192*1*2048 same stride=1
    conv_16_4_2 = tf.nn.conv2d(input=average_pool_16_4_1,
                                filters=weights['conv_16_4_2'],
                                strides=[1, 1, 1, 1],
                                padding='SAME',
                                name='conv_16_4_2')

    relu_16_4_2 = tf.nn.relu(features=conv_16_4_2,
                             name='relu_16_4_2')

    # 121
    concat_10 = tf.concat(values=[relu_16_1, concat_16_2_3, concat_16_3_4, relu_16_4_2], name='concat_10')
